(()=>{var e={450:(e,t,r)=>{const s=r(387);"undefined"!=typeof global&&void 0===global.btoa&&(global.btoa=function(e){return Buffer.from(e,"binary").toString("base64")}),"undefined"!=typeof global&&void 0===global.atob&&(global.atob=function(e){return Buffer.from(e,"base64").toString("binary")}),"undefined"!=typeof window&&void 0===window.btoa&&(window.btoa=function(e){return Buffer.from(e,"binary").toString("base64")}),"undefined"!=typeof window&&void 0===window.atob&&(window.atob=function(e){return Buffer.from(e,"base64").toString("binary")});const a=e=>{if("undefined"!=typeof btoa)return btoa(e);if("undefined"!=typeof Buffer)return Buffer.from(e,"binary").toString("base64");throw new Error("btoa is not available in this environment")};async function o(e,t,r,o,n,i){let u="true";if(!n)return u="false",{status:u,error:"Token is required for write operations"};if(!/([a-zA-Z0-9\s_\\.\-:])+(\.(md|json|jpg|jpeg|png|gif|svg|webp|bmp|ico))$/gi.test(r))return u="false",{status:u,error:"Only .md, .json, and image files are supported"};try{const l=`https://api.github.com/repos/${e}/${t}/contents/${r}`,p={Authorization:`token ${n}`};let c=null;try{c=(await s(l,{headers:p})).data.sha}catch(e){}const f={message:i||`Create ${r}`,content:a(o),...c&&{sha:c}},d=await s.put(l,f,{headers:p});return u="true",{status:u,message:c?"File updated successfully":"File created successfully",file:d.data.content}}catch(e){return u="false",{status:u,error:e.response?.data?.message||"Failed to create/update file"}}}e.exports={getList:async function(e,t,r="",a){let o="true";try{const n=`https://api.github.com/repos/${e}/${t}/contents/${r}`,i=a?{Authorization:`token ${a}`}:{},u=await s(n,{headers:i}),l=await u.data;let p=[];return l.forEach((e=>{"file"==e.type&&/([a-zA-Z0-9\s_\\.\-:])+(\.(md|json|jpg|jpeg|png|gif|svg|webp|bmp|ico))$/gi.test(e.name)&&p.push(e.name)})),p.push({status:o}),p}catch(e){return o="false",{status:o,error:"Invalid user name or repo name"}}},getContent:async function(e,t,a,o){let n="true";if(!/([a-zA-Z0-9\s_\\.\-:])+(\.(md|json|jpg|jpeg|png|gif|svg|webp|bmp|ico))$/gi.test(a))return n="false",{status:n,error:"Invalid File Path - Only .md, .json, and image files are supported"};try{const i=`https://api.github.com/repos/${e}/${t}/contents/${a}`,u=o?{Authorization:`token ${o}`}:{},l=await s(i,{headers:u}),p=await l.data,c=(e=>{if("undefined"!=typeof atob)return atob(e);if("undefined"!=typeof Buffer)return Buffer.from(e,"base64").toString("binary");throw new Error("atob is not available in this environment")})(p.content);if(a.toLowerCase().endsWith(".md")){const e=r(35),t=r(761)({html:!0,linkify:!0,typographer:!0,breaks:!0,highlight:function(r,s){if(s&&e.getLanguage(s))try{return'<pre class="hljs custom-code-hljs-class"><code>'+e.highlight(r,{language:s,ignoreIllegals:!0}).value+"</code></pre>"}catch(e){}return'<pre class="hljs custom-code-hljs-class"><code>'+t.utils.escapeHtml(r)+"</code></pre>"}}).use(r(194)).use(r(726)).use(r(991)).use(r(27)).use(r(210)).use(r(727)).use(r(990)),s=t.render(c);return n="true",{status:n,content_raw:c,content_html:s,file_type:"markdown",file_name:a.split("/").pop()}}if(!a.toLowerCase().endsWith(".json")){const e=a.split(".").pop()?.toLowerCase(),t={jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",svg:"image/svg+xml",webp:"image/webp",bmp:"image/bmp",ico:"image/x-icon"}[e||""]||"application/octet-stream";return n="true",{status:n,content_raw:c,content_base64:p.content,file_type:"image",file_name:a.split("/").pop(),mime_type:t,download_url:p.download_url}}try{const e=JSON.parse(c);return n="true",{status:n,content_raw:c,content_json:e,file_type:"json",file_name:a.split("/").pop()}}catch(e){return n="false",{status:n,error:"Invalid JSON format"}}}catch(e){return n="false",{status:n,error:"Invalid user name or repo name"}}},search:async function(e,t,r,a){let o="false";if(0==e.length||0==t.length||0==r.length)return o="false",{status:o,error:"Provide Valid Data!"};try{const n=`https://api.github.com/search/code?q=${e}+repo:${t}/${r}`,i=a?{Authorization:`token ${a}`}:{},u=await s(n,{headers:i}),l=await u.data,p=[],c=[];return l.total_count>0?(l.items.forEach((e=>{/([a-zA-Z0-9\s_\\.\-:])+(\.(md|json|jpg|jpeg|png|gif|svg|webp|bmp|ico))$/gi.test(e.name)&&c.push({filename:e.name,file_path:e.path})})),o="true",p.push({status:o,total_count:c.length},c),p):(o="false",{status:o,error:"Nothing Found!"})}catch(e){return o="false",{status:o,error:"Invalid user name or repo name"}}},createFile:o,updateFile:async function(e,t,r,o,n,i){let u="true";if(!n)return u="false",{status:u,error:"Token is required for write operations"};if(!/([a-zA-Z0-9\s_\\.\-:])+(\.(md|json|jpg|jpeg|png|gif|svg|webp|bmp|ico))$/gi.test(r))return u="false",{status:u,error:"Only .md, .json, and image files are supported"};try{const l=`https://api.github.com/repos/${e}/${t}/contents/${r}`,p={Authorization:`token ${n}`},c=(await s(l,{headers:p})).data.sha,f={message:i||`Update ${r}`,content:a(o),sha:c},d=await s.put(l,f,{headers:p});return u="true",{status:u,message:"File updated successfully",file:d.data.content}}catch(e){return u="false",{status:u,error:e.response?.data?.message||"Failed to update file"}}},deleteFile:async function(e,t,r,a,o){let n="true";if(!a)return n="false",{status:n,error:"Token is required for write operations"};try{const i=`https://api.github.com/repos/${e}/${t}/contents/${r}`,u={Authorization:`token ${a}`},l={message:o||`Delete ${r}`,sha:(await s(i,{headers:u})).data.sha};return await s.delete(i,{data:l,headers:u}),n="true",{status:n,message:"File deleted successfully"}}catch(e){return n="false",{status:n,error:e.response?.data?.message||"Failed to delete file"}}},createFolder:async function(e,t,r,s,a){let n="true";if(!s)return n="false",{status:n,error:"Token is required for write operations"};try{const n=r.endsWith("/")?`${r}.gitkeep`:`${r}/.gitkeep`,i=`# ${r}\n\nThis folder was created using MarkGit.`,u=await o(e,t,n,i,s,a||`Create folder ${r}`);return"true"===u.status?{status:"true",message:`Folder ${r} created successfully`,folder_path:r}:u}catch(e){return n="false",{status:n,error:e.message||"Failed to create folder"}}}}},387:e=>{"use strict";e.exports=require("axios")},35:e=>{"use strict";e.exports=require("highlight.js")},761:e=>{"use strict";e.exports=require("markdown-it")},726:e=>{"use strict";e.exports=require("markdown-it-deflist")},194:e=>{"use strict";e.exports=require("markdown-it-emoji")},990:e=>{"use strict";e.exports=require("markdown-it-footnote")},210:e=>{"use strict";e.exports=require("markdown-it-ins")},727:e=>{"use strict";e.exports=require("markdown-it-mark")},991:e=>{"use strict";e.exports=require("markdown-it-sub")},27:e=>{"use strict";e.exports=require("markdown-it-sup")}},t={},r=function r(s){var a=t[s];if(void 0!==a)return a.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,r),o.exports}(450);module.exports=r})();